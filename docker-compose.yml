version: '3.4'

services:
  mapsproxyapi:
    container_name: proxy-api
    image: ${DOCKER_REGISTRY-}mapsproxyapi
    build:
      context: .
      dockerfile: src/MapsProxyApi/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
    depends_on:
      - redis-server
    env_file:
      - path: ./default.env
        required: true

  redis-server:
    container_name: redis-server
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - path: ./default.env
        required: true

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "6001:8081"
    env_file:
      - path: ./default.env
        required: true
        
  postgres-server:
    container_name: postgres-server
    image: postgres:latest
    restart: always
    ports:
      - "5434:5432"
    volumes:
      - maps_postgres_data:/var/lib/postgresql/data
      - ./init_pg.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - path: ./default.env
        required: true 

  pg-admin:
    container_name: pg-admin
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:5050"
    depends_on:
      - postgres-server
    volumes:
      - maps_pgadmin:/home/shared  
    env_file:
      - path: ./default.env
        required: true
   
volumes:
  maps_postgres_data:
  maps_pgadmin:
